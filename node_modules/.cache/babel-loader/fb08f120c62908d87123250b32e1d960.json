{"ast":null,"code":"var _jsxFileName = \"/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Duodecima semana/Dia 1 _ Ejercicio semana anterior CRUD react/ft-ene21-ReactJS-examples-main/src/components/Main/Main.js\";\nimport React from 'react';\nimport './Main.css'; //import spinner from './spinner.gif';\n\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport Search from '../Search/Search';\nimport getPosts from '../../data/dataProvider'; // ----------- STATE ITNITIAL\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPost = title => {\n      this.setState({\n        posts: [...this.state.posts, {\n          title,\n          check: false,\n          priority: \"baja\",\n          search: \"\"\n        }],\n        mode: 0\n      });\n    };\n\n    this.drawPosts = () => {\n      // if (this.state.posts.search == \"\") {\n      //   return this.state.posts.map((item, i) =>\n      //   <Post title={item.title} fnBorrar={this.deletePosts} keyy={i} fnEdit={this.editPosts} fnFlag={this.loadPosts} tareaHecha={this.tareaHecha} claseCheck={item.check} editPriority={this.editPriority} statePriority={item.priority} btnEditNewPost={this.btnEditNewPost}/>\n      //   )\n      // } else{\n      console.log(this.state.posts[1].done);\n      return this.state.posts.filter(item => item.title.toLowerCase().includes(this.state.posts.toLowerCase())).map(item => {\n        /*#__PURE__*/\n        _jsxDEV(Post, {\n          title: item.title,\n          fnBorrar: this.deletePosts,\n          fnEdit: this.editPosts,\n          fnFlag: this.loadPosts,\n          tareaHecha: this.tareaHecha,\n          claseCheck: item.check,\n          editPriority: this.editPriority,\n          statePriority: item.priority,\n          btnEditNewPost: this.btnEditNewPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this);\n      }); // }\n    };\n\n    this.deletePosts = el => {\n      const task = this.state.posts.filter((index, i) => i !== el);\n      this.setState({\n        posts: task\n      });\n    };\n\n    this.editPosts = (i, newTitle) => {\n      const newTitles = [...this.state.posts]; // Copy of an array\n\n      newTitles[i].title = newTitle; // Modificar la copia con la i y el nuevo título\n\n      this.setState({\n        posts: newTitles,\n        mode: 0\n      }); // Se sustituye el nuevo título\n    };\n\n    this.tareaHecha = i => {\n      const newPosts = this.state.posts.map((el, index) => {\n        // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n        if (i == index) {\n          el.check = !el.check;\n        }\n\n        return el;\n      });\n      this.setState({\n        posts: newPosts\n      }); // Aquí se atribuye el nuevo estado de posts con newPosts\n    };\n\n    this.editPriority = (i, statePriority) => {\n      const priority2 = this.state.posts.map((el, index) => {\n        return el.priority;\n      });\n      this.setState({\n        priority: priority2\n      });\n    };\n\n    this.btnGoBack = () => {\n      this.setState({\n        mode: 0\n      });\n    };\n\n    this.btnCreateNewPost = () => {\n      this.setState({\n        mode: 1\n      });\n    };\n\n    this.btnEditNewPost = id => {\n      this.setState({\n        mode: 2,\n        selected: id\n      });\n    };\n\n    this.searchPosts = event => this.setState({\n      search: event.target.value\n    });\n\n    this.state = {\n      posts: [],\n      user: this.props.user || \"\",\n      limit: 10,\n      mode: 0,\n      selected: -1\n    };\n  }\n\n  async componentDidMount() {\n    const newPosts = await getPosts();\n    this.setState({\n      posts: [...this.state.posts, ...newPosts]\n    });\n  } // ---------- CONEXIÓN CON EL COMPONENTE POST\n\n\n  render() {\n    return this.state.mode == 0 ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hola, \", this.state.user ? this.state.user : \"¡qué pasa Chape!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Holiiii\",\n        value: this.state.posts.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editLine\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          searchPosts: (this.state.selected, this.state.mode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          onClick: () => this.btnCreateNewPost(),\n          children: \"Crear nueva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), this.drawPosts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this) : this.state.mode == 1 ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Crea ah\\xED una tarea como: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 43\n        }, this), \" \\xA1Que agsco de React!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        btnGoBack: this.btnGoBack,\n        actualMode: this.state.mode,\n        createNewPost: this.createNewPost,\n        addPost: this.addPost,\n        editPosts: this.editPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this) : this.state.mode == 2 ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Venga, \\xE9chale una editadi\\xF1a ah\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        btnGoBack: this.btnGoBack,\n        actualMode: this.state.mode,\n        editPosts: this.editPosts,\n        texto: this.state.posts[this.state.selected].title,\n        keyy: this.state.selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this) : \" \";\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Duodecima semana/Dia 1 _ Ejercicio semana anterior CRUD react/ft-ene21-ReactJS-examples-main/src/components/Main/Main.js"],"names":["React","Post","Form","Search","getPosts","Main","Component","constructor","props","addPost","title","setState","posts","state","check","priority","search","mode","drawPosts","console","log","done","filter","item","toLowerCase","includes","map","deletePosts","editPosts","loadPosts","tareaHecha","editPriority","btnEditNewPost","el","task","index","i","newTitle","newTitles","newPosts","statePriority","priority2","btnGoBack","btnCreateNewPost","id","selected","searchPosts","event","target","value","user","limit","componentDidMount","render","createNewPost"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.css';\n//import spinner from './spinner.gif';\n\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport Search from '../Search/Search'\nimport getPosts from '../../data/dataProvider';\n\n\n\n// ----------- STATE ITNITIAL\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      user: this.props.user || \"\",\n      limit: 10,\n      mode: 0,\n      selected: -1\n    }\n  }\n  \n  addPost = (title) => { \n    this.setState({\n      posts: [...this.state.posts, { title,  check: false, priority: \"baja\", search: \"\"}],\n      mode: 0\n    });\n  }\n\n  async componentDidMount() {\n    const newPosts = await getPosts()\n    this.setState({ posts: [...this.state.posts, ...newPosts] });\n  }\n  \n  // ---------- CONEXIÓN CON EL COMPONENTE POST\n  drawPosts = () => {\n    // if (this.state.posts.search == \"\") {\n    //   return this.state.posts.map((item, i) =>\n    //   <Post title={item.title} fnBorrar={this.deletePosts} keyy={i} fnEdit={this.editPosts} fnFlag={this.loadPosts} tareaHecha={this.tareaHecha} claseCheck={item.check} editPriority={this.editPriority} statePriority={item.priority} btnEditNewPost={this.btnEditNewPost}/>\n    //   )\n    // } else{\n      console.log(this.state.posts[1].done);\n      return this.state.posts.filter( item => item.title.toLowerCase().includes(this.state.posts.toLowerCase())).map(item => {\n      <Post title={item.title} fnBorrar={this.deletePosts} fnEdit={this.editPosts} fnFlag={this.loadPosts} tareaHecha={this.tareaHecha} claseCheck={item.check} editPriority={this.editPriority} statePriority={item.priority} btnEditNewPost={this.btnEditNewPost}/>})\n    // }\n    }\n      \n// ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n  deletePosts = (el) => { \n          const task = this.state.posts.filter((index, i )=> i !== el);\n          this.setState({posts: task})\n        \n      }\n      \n// ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n  editPosts = (i, newTitle) => {\n    const newTitles = [...this.state.posts];  // Copy of an array\n    newTitles[i].title = newTitle             // Modificar la copia con la i y el nuevo título\n    this.setState({ posts: newTitles, mode:0})       // Se sustituye el nuevo título\n    }\n    \n    // --------- Tarea hecha, cambio de clase, tacha.\n  tareaHecha = (i) =>{   \n    const newPosts = this.state.posts.map((el, index) => {      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if(i == index){\n          el.check = !el.check\n        }\n        return el\n      }\n      )\n      this.setState({posts: newPosts})                          // Aquí se atribuye el nuevo estado de posts con newPosts\n    }\n  \n// ------ Editar la prioridad para que se pinte según prioridad media alta o baja\n  editPriority = (i, statePriority) => {\n      const priority2 = this.state.posts.map((el, index) => {\n        return el.priority\n      })\n      this.setState({ priority: priority2})\n    }\n    \n  btnGoBack = () => {\n      this.setState({mode:0})\n    }\n  btnCreateNewPost = () => {\n      this.setState({mode: 1})\n    }\n  btnEditNewPost = (id) => {\n      this.setState({mode: 2, selected: id})\n    }\n\n  searchPosts = (event) => this.setState({search: event.target.value})\n\n\n  render() {\n    return (\n       (this.state.mode == 0) ?\n          <main>\n              <h1>Hola, {this.state.user ? this.state.user : \"¡qué pasa Chape!\"}</h1>\n              <input placeholder=\"Holiiii\" value={this.state.posts.search} ></input>\n              <div className=\"editLine\" >\n                  <Form searchPosts={this.state.selected, this.state.mode}/>            \n                  <div className=\"btn\" onClick={()=> this.btnCreateNewPost()} >Crear nueva</div>\n              </div>\n              {this.drawPosts()}    \n          </main> \n      : \n      (this.state.mode == 1) ?\n      <main>\n            <h1> Crea ahí una tarea como: <br /> ¡Que agsco de React!</h1>\n            <Form btnGoBack={this.btnGoBack} actualMode={this.state.mode} createNewPost={this.createNewPost} addPost={this.addPost} editPosts={this.editPosts} />\n      </main>\n\n    :  \n    (this.state.mode == 2) ?\n          <main>\n<             h1>Venga, échale una editadiña ahí</h1>\n                <Form btnGoBack={this.btnGoBack} actualMode={this.state.mode} editPosts={this.editPosts} texto={this.state.posts[this.state.selected].title} keyy={this.state.selected}/> \n          </main> \n              : \" \"\n        )  \n      }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}