{"ast":null,"code":"var _jsxFileName = \"/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Decimotercera semana/react-to-do-list/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Main.css';\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport getPosts from '../../data/dataProvider';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  user\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [usuario, setUsuario] = useState(user || \"\");\n  const [limit, setLimit] = useState(10); // Que es limit??\n\n  const [mode, setMode] = useState(0);\n  const [selected, setSelected] = useState(-1);\n  const [search, setSearch] = useState(\"\");\n\n  const addPost = title => {\n    setPosts({\n      posts: [...posts, {\n        title,\n        check: false,\n        priority: \"baja\"\n      }],\n      mode: 0\n    });\n  }; // CAMBIAR ESTA CONFIGUARACIÓN Y TRADUCIR ESTA VAINA\n  // async componentDidMount() {\n  //   const newPosts = await getPosts()\n  //   this.setState({ posts: [...this.state.posts, ...newPosts] });\n  // }\n  // ---------- CONEXIÓN CON EL COMPONENTE POST\n\n\n  const drawPosts = () => {\n    if (this.state.search == \"\") {\n      // {this.addPost}\n      console.log(this.state.search);\n      return this.state.posts.map((item, i) => /*#__PURE__*/_jsxDEV(Post, {\n        title: item.title,\n        fnBorrar: this.deletePosts,\n        keyy: i,\n        fnEdit: this.editPosts,\n        fnFlag: this.loadPosts,\n        tareaHecha: this.tareaHecha,\n        claseCheck: item.check,\n        editPriority: this.editPriority,\n        statePriority: item.priority,\n        btnEditNewPost: this.btnEditNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Est\\xE1s buscando guay. Solo necesitas escribir la robermagicmap \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    }\n  }; // ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n\n\n  const deletePosts = el => {\n    const task = posts.filter((index, i) => i !== el);\n    setPosts({\n      posts: task\n    });\n  }; // ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n\n\n  const editPosts = (i, newTitle) => {\n    const newTitles = [...posts]; // Copy of an array\n\n    newTitles[i].title = newTitle; // Modificar la copia con la i y el nuevo título\n\n    setPosts({\n      posts: newTitles,\n      mode: 0\n    }); // Se sustituye el nuevo título\n  }; // --------- Tarea hecha, cambio de clase, tacha.\n\n\n  const tareaHecha = i => {\n    const newPosts = posts.map((el, index) => {\n      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if (i == index) {\n        el.check = !el.check;\n      }\n\n      return el;\n    });\n    setPosts({\n      posts: newPosts\n    }); // Aquí se atribuye el nuevo estado de posts con newPosts\n  }; // ------ Editar la prioridad para que se pinte según prioridad media alta o baja\n\n\n  const editPriority = (i, statePriority) => {\n    const priority2 = posts.map((el, index) => {\n      return el.priority;\n    });\n    setPosts({\n      priority: priority2\n    });\n  };\n\n  const btnGoBack = () => {\n    setMode({\n      mode: 0\n    });\n  };\n\n  const btnCreateNewPost = () => {\n    setMode({\n      mode: 1\n    });\n  };\n\n  const btnEditNewPost = id => {\n    setMode({\n      mode: 2\n    });\n    setSelected({\n      selected: id\n    });\n  };\n\n  const searchPosts = el => this.setState({\n    search: el.target.value\n  });\n\n  return this.state.mode == 0 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hola, \", this.state.user ? this.state.user : \"¡qué pasa Chape!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"  Busca aqu\\xED tu contenido...\",\n        type: \"text\",\n        value: this.state.posts.search,\n        className: \"editInput\",\n        onChange: this.searchPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: () => this.btnCreateNewPost(),\n        children: \"Crear nueva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this), this.drawPosts()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 11\n  }, this) : this.state.mode == 1 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Crea ah\\xED una tarea como: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 43\n      }, this), \" \\xA1Que agsco de React!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      btnGoBack: this.btnGoBack,\n      actualMode: this.state.mode,\n      createNewPost: this.createNewPost,\n      addPost: this.addPost,\n      editPosts: this.editPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this) : this.state.mode == 2 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Venga, \\xE9chale una editadi\\xF1a ah\\xED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      btnGoBack: this.btnGoBack,\n      actualMode: this.state.mode,\n      editPosts: this.editPosts,\n      texto: this.state.posts[this.state.selected].title,\n      keyy: this.state.selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 11\n  }, this) : \" \";\n};\n\n_s(Main, \"UrOjQNZOMCFGpfHdKLKPSeyeU84=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Decimotercera semana/react-to-do-list/src/components/Main/Main.js"],"names":["React","Post","Form","getPosts","useState","Main","user","posts","setPosts","usuario","setUsuario","limit","setLimit","mode","setMode","selected","setSelected","search","setSearch","addPost","title","check","priority","drawPosts","state","console","log","map","item","i","deletePosts","editPosts","loadPosts","tareaHecha","editPriority","btnEditNewPost","el","task","filter","index","newTitle","newTitles","newPosts","statePriority","priority2","btnGoBack","btnCreateNewPost","id","searchPosts","setState","target","value","createNewPost"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.css';\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport getPosts from '../../data/dataProvider';\nimport { useState } from 'react';\n\n\nconst Main = ({ user }) => {\n  const [posts, setPosts] = useState([]);\n  const [usuario, setUsuario] = useState(user || \"\");\n  const [limit, setLimit] = useState(10); // Que es limit??\n  const [mode, setMode] = useState(0);\n  const [selected, setSelected] = useState(-1);\n  const [search, setSearch] = useState(\"\");\n\n  \n  const addPost = (title) => { \n    setPosts({\n      posts: [...posts, { title,  check: false, priority: \"baja\"}],\n      mode: 0\n    });\n  }\n\n  // CAMBIAR ESTA CONFIGUARACIÓN Y TRADUCIR ESTA VAINA\n  // async componentDidMount() {\n  //   const newPosts = await getPosts()\n  //   this.setState({ posts: [...this.state.posts, ...newPosts] });\n  // }\n  \n  // ---------- CONEXIÓN CON EL COMPONENTE POST\n  const drawPosts = () => {\n    if (this.state.search == \"\") {\n      // {this.addPost}\n      console.log(this.state.search);\n      return this.state.posts.map((item, i) =>\n          <Post title={item.title} fnBorrar={this.deletePosts} keyy={i} fnEdit={this.editPosts} fnFlag={this.loadPosts} tareaHecha={this.tareaHecha} claseCheck={item.check} editPriority={this.editPriority} statePriority={item.priority} btnEditNewPost={this.btnEditNewPost}/>\n      )\n    }else{\n      return <h1>Estás buscando guay. Solo necesitas escribir la robermagicmap </h1>\n    }\n    }\n      \n// ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n  const deletePosts = (el) => { \n          const task = posts.filter((index, i )=> i !== el);\n          setPosts({posts: task})\n        \n      }\n      \n// ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n  const editPosts = (i, newTitle) => {\n    const newTitles = [...posts];  // Copy of an array\n    newTitles[i].title = newTitle             // Modificar la copia con la i y el nuevo título\n    setPosts({ posts: newTitles, mode:0})       // Se sustituye el nuevo título\n    }\n    \n    // --------- Tarea hecha, cambio de clase, tacha.\n  const tareaHecha = (i) =>{   \n    const newPosts = posts.map((el, index) => {      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if(i == index){\n          el.check = !el.check\n        }\n        return el\n      }\n      )\n      setPosts({posts: newPosts})                          // Aquí se atribuye el nuevo estado de posts con newPosts\n    }\n  \n// ------ Editar la prioridad para que se pinte según prioridad media alta o baja\n  const editPriority = (i, statePriority) => {\n      const priority2 = posts.map((el, index) => {\n        return el.priority\n      })\n      setPosts({ priority: priority2})\n    }\n    \n  const btnGoBack = () => {\n      setMode({mode:0})\n    }\n  const btnCreateNewPost = () => {\n     setMode({mode: 1})\n    }\n  const btnEditNewPost = (id) => {\n     setMode({mode: 2})\n     setSelected({selected: id})\n    }\n\n  const searchPosts = (el) => this.setState( { search: el.target.value } )\n\n\n      return (\n       (this.state.mode == 0) ?\n          <main>\n              <h1>Hola, {this.state.user ? this.state.user : \"¡qué pasa Chape!\"}</h1>\n              <div className=\"editLine\" >\n                  <input placeholder=\"  Busca aquí tu contenido...\" type=\"text\" value={this.state.posts.search} className=\"editInput\" onChange={this.searchPosts}/> \n                  {/* <Search searchPosts={this.state.selected, this.state.mode}/>             */}\n                  <div className=\"btn\" onClick={()=> this.btnCreateNewPost()} >Crear nueva</div>\n              </div>\n              {this.drawPosts()}    \n          </main> \n      : \n      (this.state.mode == 1) ?\n      <main>\n            <h1> Crea ahí una tarea como: <br /> ¡Que agsco de React!</h1>\n            <Form btnGoBack={this.btnGoBack} actualMode={this.state.mode} createNewPost={this.createNewPost} addPost={this.addPost} editPosts={this.editPosts} />\n      </main>\n\n    :  \n    (this.state.mode == 2) ?\n          <main>\n<             h1>Venga, échale una editadiña ahí</h1>\n                <Form btnGoBack={this.btnGoBack} actualMode={this.state.mode} editPosts={this.editPosts} texto={this.state.posts[this.state.selected].title} keyy={this.state.selected}/> \n          </main> \n              : \" \"\n        )  \n      } \n\nexport default Main;"]},"metadata":{},"sourceType":"module"}