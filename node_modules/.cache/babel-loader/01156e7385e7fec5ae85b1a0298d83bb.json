{"ast":null,"code":"var _jsxFileName = \"/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Duodecima semana/Dia 1 _ Ejercicio semana anterior CRUD react/ft-ene21-ReactJS-examples-main/src/components/Main/Main.js\";\nimport React from 'react';\nimport './Main.css'; //import spinner from './spinner.gif';\n\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport Search from '../Search/Search';\nimport getPosts from '../../data/dataProvider'; // ----------- STATE ITNITIAL\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPost = title => {\n      this.setState({\n        posts: [...this.state.posts, {\n          title,\n          check: false,\n          priority: false\n        }]\n      });\n    };\n\n    this.drawPosts = () => {\n      console.log(\"draw\", this.state.posts);\n\n      if (this.state.posts.length > 0) {\n        return this.state.posts.map((item, i) => /*#__PURE__*/_jsxDEV(Post, {\n          title: item.title,\n          fnBorrar: this.deletePosts,\n          keyy: i,\n          fnEdit: this.editPosts,\n          fnFlag: this.loadPosts,\n          tareaHecha: this.tareaHecha,\n          claseCheck: item.check,\n          editPriority: this.editPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No hay datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    };\n\n    this.deletePosts = el => {\n      const task = this.state.posts.filter((index, i) => i !== el);\n      this.setState({\n        posts: task\n      });\n    };\n\n    this.editPosts = (i, newTitle) => {\n      const newTitles = [...this.state.posts]; // Copy of an array\n\n      newTitles[i].title = newTitle; // Modificar la copia con la i y el nuevo título\n\n      this.setState({\n        posts: newTitles\n      }); // Se sustituye el nuevo título\n\n      this.setState({\n        insert: true\n      }); // Cambiar el estado de INSERT\n    };\n\n    this.loadPosts = i => {\n      this.setState({\n        insert: false\n      });\n    };\n\n    this.tareaHecha = i => {\n      const newPosts = this.state.posts.map((el, index) => {\n        // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n        if (i == index) {\n          el.check = !el.check;\n        }\n\n        return el;\n      });\n      this.setState({\n        posts: newPosts\n      }); // Aquí se atribuye el nuevo estado de posts con newPosts\n    };\n\n    this.editPriority = i => {\n      const priority = this.state.posts.map((el, index) => {\n        if (i == index) {\n          el.priority = !el.priority;\n        }\n\n        return el;\n      });\n      this.setState({\n        posts: priority\n      });\n    };\n\n    this.state = {\n      posts: [],\n      user: this.props.user || \"\",\n      limit: 10,\n      insert: true\n    };\n  }\n\n  async componentDidMount() {\n    const newPosts = await getPosts();\n    this.setState({\n      posts: [...this.state.posts, ...newPosts]\n    });\n  } // ---------- CONEXIÓN CON EL COMPONENTE POST\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hola, \", this.state.user ? this.state.user : \"¡qué pasa Chape!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        addPost: this.addPost,\n        editPosts: this.editPosts,\n        state: this.state.insert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addPost: this.addPost,\n        editPosts: this.editPosts,\n        state: this.state.insert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), this.drawPosts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Duodecima semana/Dia 1 _ Ejercicio semana anterior CRUD react/ft-ene21-ReactJS-examples-main/src/components/Main/Main.js"],"names":["React","Post","Form","Search","getPosts","Main","Component","constructor","props","addPost","title","setState","posts","state","check","priority","drawPosts","console","log","length","map","item","i","deletePosts","editPosts","loadPosts","tareaHecha","editPriority","el","task","filter","index","newTitle","newTitles","insert","newPosts","user","limit","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.css';\n//import spinner from './spinner.gif';\n\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport Search from '../Search/Search'\nimport getPosts from '../../data/dataProvider';\n\n\n\n// ----------- STATE ITNITIAL\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      user: this.props.user || \"\",\n      limit: 10,\n      insert: true,\n    }\n  }\n  \n  addPost = (title) => { \n    this.setState({\n      posts: [...this.state.posts, { title,  check: false, priority: false}]\n    });\n  }\n\n\n  async componentDidMount() {\n    const newPosts = await getPosts()\n    this.setState({ posts: [...this.state.posts, ...newPosts] });\n  }\n\n  \n  \n  // ---------- CONEXIÓN CON EL COMPONENTE POST\n  drawPosts = () => {\n    console.log(\"draw\", this.state.posts);\n    if (this.state.posts.length > 0) {\n      return this.state.posts.map((item, i) =>\n      <Post title={item.title} fnBorrar={this.deletePosts} keyy={i} fnEdit={this.editPosts} fnFlag={this.loadPosts} tareaHecha={this.tareaHecha} claseCheck={item.check} editPriority={this.editPriority}/>\n      )\n    }\n      return <h4>No hay datos</h4>\n    }\n      \n\n// ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n      deletePosts = (el) => { \n          const task = this.state.posts.filter((index, i )=> i !== el);\n          this.setState({posts: task})\n        \n      }\n      \n\n// ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n  editPosts = (i, newTitle) => {\n      const newTitles = [...this.state.posts];  // Copy of an array\n      newTitles[i].title = newTitle             // Modificar la copia con la i y el nuevo título\n      this.setState({ posts: newTitles })       // Se sustituye el nuevo título\n    \n      this.setState({insert: true})               // Cambiar el estado de INSERT\n  }\n\n  loadPosts = (i) => {\n    this.setState({insert: false})\n  }\n  \n\n  tareaHecha = (i) =>{   \n    const newPosts = this.state.posts.map((el, index) => {      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if(i == index){\n          el.check = !el.check\n        }\n        return el\n      }\n      )\n      this.setState({posts: newPosts})                          // Aquí se atribuye el nuevo estado de posts con newPosts\n    }\n  \n    editPriority = (i) => {\n      const priority = this.state.posts.map((el, index) => {\n        if(i == index){\n          el.priority = !el.priority\n        }\n        return el\n      })\n      this.setState({posts: priority})\n    }\n  \n  render() {\n    return (\n      <main>\n        <h1>Hola, {this.state.user ? this.state.user : \"¡qué pasa Chape!\"}</h1>\n        <Search addPost={this.addPost} editPosts={this.editPosts} state={this.state.insert}/>\n        <Form addPost={this.addPost} editPosts={this.editPosts} state={this.state.insert} />\n        {this.drawPosts()}\n      </main>\n    )\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}