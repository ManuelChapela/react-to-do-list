{"ast":null,"code":"var _jsxFileName = \"/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Decimotercera semana/react-to-do-list/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Main.css';\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport getPosts from '../../data/dataProvider';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  user\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [usuario, setUsuario] = useState(user || \"\");\n  const [limit, setLimit] = useState(10); // Que es limit??\n\n  const [mode, setMode] = useState(0);\n  const [selected, setSelected] = useState(-1);\n  const [search, setSearch] = useState(\"\");\n\n  const addPost = title => {\n    setPosts({\n      posts: [...posts, {\n        title,\n        check: false,\n        priority: \"baja\"\n      }],\n      mode: 0\n    });\n  }; // CAMBIAR ESTA CONFIGUARACIÓN Y TRADUCIR ESTA VAINA\n  // async componentDidMount() {\n  //   const newPosts = await getPosts()\n  //   this.setState({ posts: [...this.state.posts, ...newPosts] });\n  // }\n\n\n  const drawPosts = () => {\n    if (search == \"\") {\n      console.log(search);\n      return posts.map((item, i) => /*#__PURE__*/_jsxDEV(Post, {\n        title: item.title,\n        fnBorrar: deletePosts,\n        keyy: i,\n        fnEdit: editPosts,\n        tareaHecha: tareaHecha,\n        claseCheck: item.check,\n        editPriority: editPriority,\n        statePriority: item.priority,\n        btnEditNewPost: btnEditNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Est\\xE1s buscando guay. Solo necesitas escribir la robermagicmap \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    }\n  }; // ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n\n\n  const deletePosts = el => {\n    const task = posts.filter((index, i) => i !== el);\n    setPosts({\n      posts: task\n    });\n  }; // ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n\n\n  const editPosts = (i, newTitle) => {\n    const newTitles = [...posts];\n    newTitles[i].title = newTitle;\n    setPosts(newTitles);\n    setMode(0);\n  }; // --------- Tarea hecha, cambio de clase, tacha.\n\n\n  const tareaHecha = i => {\n    const newPosts = posts.map((el, index) => {\n      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if (i == index) {\n        el.check = !el.check;\n      }\n\n      return el;\n    });\n    setPosts(newPosts); // Aquí se atribuye el nuevo estado de posts con newPosts\n  }; // ------ Editar la prioridad para que se pinte según prioridad media alta o baja\n\n\n  const editPriority = (i, statePriority) => {\n    const priority2 = posts.map((el, index) => {\n      return el.priority;\n    });\n    setPosts(priority2);\n  };\n\n  const btnGoBack = () => {\n    setMode(0);\n  };\n\n  const btnCreateNewPost = () => {\n    setMode(1);\n  };\n\n  const btnEditNewPost = id => {\n    setMode(2);\n    setSelected(id);\n  };\n\n  const searchPosts = el => setSearch(el.target.value);\n\n  return mode == 0 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hola, \", usuario ? usuario : \"¡qué pasa Chape!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"  Busca aqu\\xED tu contenido...\",\n        type: \"text\",\n        value: posts.search,\n        className: \"editInput\",\n        onChange: searchPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: () => btnCreateNewPost(),\n        children: \"Crear nueva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }, this), drawPosts()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 11\n  }, this) : mode == 1 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Crea ah\\xED una tarea como: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 43\n      }, this), \" \\xA1Que agsco de React!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      btnGoBack: btnGoBack,\n      actualMode: mode,\n      addPost: addPost,\n      editPosts: editPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }, this) : mode == 2 ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Venga, \\xE9chale una editadi\\xF1a ah\\xED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      btnGoBack: btnGoBack,\n      actualMode: mode,\n      editPosts: editPosts,\n      texto: posts[selected].title,\n      keyy: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 11\n  }, this) : \" \";\n};\n\n_s(Main, \"UrOjQNZOMCFGpfHdKLKPSeyeU84=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Decimotercera semana/react-to-do-list/src/components/Main/Main.js"],"names":["React","Post","Form","getPosts","useState","Main","user","posts","setPosts","usuario","setUsuario","limit","setLimit","mode","setMode","selected","setSelected","search","setSearch","addPost","title","check","priority","drawPosts","console","log","map","item","i","deletePosts","editPosts","tareaHecha","editPriority","btnEditNewPost","el","task","filter","index","newTitle","newTitles","newPosts","statePriority","priority2","btnGoBack","btnCreateNewPost","id","searchPosts","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.css';\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport getPosts from '../../data/dataProvider';\nimport { useState } from 'react';\n\n\nconst Main = ({ user }) => {\n  const [posts, setPosts] = useState([]);\n  const [usuario, setUsuario] = useState(user || \"\");\n  const [limit, setLimit] = useState(10); // Que es limit??\n  const [mode, setMode] = useState(0);\n  const [selected, setSelected] = useState(-1);\n  const [search, setSearch] = useState(\"\");\n\n  \n  const addPost = (title) => { \n    setPosts({\n      posts: [...posts, { title,  check: false, priority: \"baja\"}],\n      mode: 0\n    });\n  }\n\n  // CAMBIAR ESTA CONFIGUARACIÓN Y TRADUCIR ESTA VAINA\n  // async componentDidMount() {\n  //   const newPosts = await getPosts()\n  //   this.setState({ posts: [...this.state.posts, ...newPosts] });\n  // }\n  \n  const drawPosts = () => {\n    if (search == \"\") {\n      console.log(search);\n      return posts.map((item, i) =>\n          <Post title={item.title} fnBorrar={deletePosts} keyy={i} fnEdit={editPosts} tareaHecha={tareaHecha} claseCheck={item.check} editPriority={editPriority} statePriority={item.priority} btnEditNewPost={btnEditNewPost}/>\n      )\n    }else{\n      return <h1>Estás buscando guay. Solo necesitas escribir la robermagicmap </h1>\n    }\n    }\n      \n// ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n  const deletePosts = (el) => { \n          const task = posts.filter((index, i )=> i !== el);\n          setPosts({posts: task})\n        \n      }\n      \n// ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n  const editPosts = (i, newTitle) => {\n    const newTitles = [...posts]; \n    newTitles[i].title = newTitle            \n    setPosts(newTitles)\n    setMode(0)  \n    }\n    \n    // --------- Tarea hecha, cambio de clase, tacha.\n  const tareaHecha = (i) =>{   \n    const newPosts = posts.map((el, index) => {      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if(i == index){\n          el.check = !el.check\n        }\n        return el\n      }\n      )\n      setPosts(newPosts)                          // Aquí se atribuye el nuevo estado de posts con newPosts\n    }\n  \n// ------ Editar la prioridad para que se pinte según prioridad media alta o baja\n  const editPriority = (i, statePriority) => {\n      const priority2 = posts.map((el, index) => {\n        return el.priority\n      })\n      setPosts(priority2)\n    }\n    \n  const btnGoBack = () => {\n      setMode(0)\n    }\n  const btnCreateNewPost = () => {\n     setMode(1)\n    }\n  const btnEditNewPost = (id) => {\n    setMode(2)\n    setSelected(id)\n    }\n\n\n\n  const searchPosts = (el) => setSearch( el.target.value )\n\n\n      return (\n       (mode == 0) ?\n          <main>\n              <h1>Hola, {usuario ? usuario : \"¡qué pasa Chape!\"}</h1>\n              <div className=\"editLine\" >\n                  <input placeholder=\"  Busca aquí tu contenido...\" type=\"text\" value={posts.search} className=\"editInput\" onChange={searchPosts}/> \n                  {/* <Search searchPosts={this.state.selected, this.state.mode}/>             */}\n                  <div className=\"btn\" onClick={()=> btnCreateNewPost()} >Crear nueva</div>\n              </div>\n              {drawPosts()}    \n          </main> \n      : \n      (mode == 1) ?\n      <main>\n            <h1> Crea ahí una tarea como: <br /> ¡Que agsco de React!</h1>\n            <Form btnGoBack={btnGoBack} actualMode={mode}  addPost={addPost} editPosts={editPosts} />\n      </main>\n\n    :  \n    (mode == 2) ?\n          <main>\n<             h1>Venga, échale una editadiña ahí</h1>\n                <Form btnGoBack={btnGoBack} actualMode={mode} editPosts={editPosts} texto={posts[selected].title} keyy={selected}/> \n          </main> \n              : \" \"\n        )  \n      } \n\nexport default Main;"]},"metadata":{},"sourceType":"module"}