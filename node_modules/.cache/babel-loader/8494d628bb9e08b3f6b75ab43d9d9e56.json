{"ast":null,"code":"var _jsxFileName = \"/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Duodecima semana/Dia 1 _ Ejercicio semana anterior CRUD react/ft-ene21-ReactJS-examples-main/src/components/Main/Main.js\";\nimport React from 'react';\nimport './Main.css'; //import spinner from './spinner.gif';\n\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport Search from '../Search/Search';\nimport getPosts from '../../data/dataProvider'; // ----------- STATE ITNITIAL\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPost = title => {\n      this.setState({\n        posts: [...this.state.posts, {\n          title,\n          check: false,\n          priority: \"baja\"\n        }],\n        mode: 0\n      });\n    };\n\n    this.drawPosts = () => {\n      if (this.state.posts.length > 0) {\n        return this.state.posts.map((item, i) =>\n        /*#__PURE__*/\n        // const newPost = {TODO EL OBJ aquí dentro} ---> data={newPost}\n        _jsxDEV(Post, {\n          title: item.title,\n          fnBorrar: this.deletePosts,\n          keyy: i,\n          fnEdit: this.editPosts,\n          fnFlag: this.loadPosts,\n          tareaHecha: this.tareaHecha,\n          claseCheck: item.check,\n          editPriority: this.editPriority,\n          statePriority: item.priority,\n          btnEditNewPost: this.btnEditNewPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No hay datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    };\n\n    this.deletePosts = el => {\n      const task = this.state.posts.filter((index, i) => i !== el);\n      this.setState({\n        posts: task\n      });\n    };\n\n    this.editPosts = (i, newTitle) => {\n      const newTitles = [...this.state.posts]; // Copy of an array\n\n      newTitles[i].title = newTitle; // Modificar la copia con la i y el nuevo título\n\n      this.setState({\n        posts: newTitles,\n        mode: 0\n      }); // Se sustituye el nuevo título\n    };\n\n    this.tareaHecha = i => {\n      const newPosts = this.state.posts.map((el, index) => {\n        // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n        if (i == index) {\n          el.check = !el.check;\n        }\n\n        return el;\n      });\n      this.setState({\n        posts: newPosts\n      }); // Aquí se atribuye el nuevo estado de posts con newPosts\n    };\n\n    this.editPriority = (i, statePriority) => {\n      const priority2 = this.state.posts.map((el, index) => {\n        console.log(\"1\", el.priority); // false \n\n        console.log(\"2\", statePriority); //  POSICIÓN DONDE SE HACE CLIC\n\n        console.log(\"3\", index); //  La posición del objeto en el array\n\n        console.log(\"4\", i); //  POSICIÓN DONDE SE HACE CLIC\n\n        return el.priority;\n      });\n      this.setState({\n        priority: priority2\n      });\n    };\n\n    this.btnGoBack = () => {\n      this.setState({\n        mode: 0\n      });\n    };\n\n    this.btnCreateNewPost = () => {\n      this.setState({\n        mode: 1\n      });\n    };\n\n    this.btnEditNewPost = () => {\n      this.setState({\n        mode: 2\n      });\n    };\n\n    this.state = {\n      posts: [],\n      user: this.props.user || \"\",\n      limit: 10,\n      // insert: true,\n      mode: 0\n    };\n  }\n\n  async componentDidMount() {\n    const newPosts = await getPosts();\n    this.setState({\n      posts: [...this.state.posts, ...newPosts]\n    });\n  } // ---------- CONEXIÓN CON EL COMPONENTE POST\n\n\n  render() {\n    return this.state.mode == 0 ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hola, \", this.state.user ? this.state.user : \"¡qué pasa Chape!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editLine\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          onClick: () => this.btnCreateNewPost(),\n          children: \"Crear nueva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), this.drawPosts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this) : this.state.mode == 1 ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Crea ah\\xED una tarea como: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 43\n        }, this), \" \\xA1Que agsco de React!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        btnGoBack: this.btnGoBack,\n        actualMode: this.state.mode,\n        createNewPost: this.createNewPost,\n        addPost: this.addPost,\n        editPosts: this.editPosts,\n        state: this.state.insert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this) : this.state.mode == 2 ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Venga, \\xE9chale una editadi\\xF1a ah\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        btnGoBack: this.btnGoBack,\n        actualMode: this.state.mode,\n        editPosts: this.editPosts,\n        texto: this.state.posts.title,\n        keyy: this.state.posts.keyy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this) : \" \";\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/Chapeladas/Desktop/Web design/The Bridge/Apuntes clase/Duodecima semana/Dia 1 _ Ejercicio semana anterior CRUD react/ft-ene21-ReactJS-examples-main/src/components/Main/Main.js"],"names":["React","Post","Form","Search","getPosts","Main","Component","constructor","props","addPost","title","setState","posts","state","check","priority","mode","drawPosts","length","map","item","i","deletePosts","editPosts","loadPosts","tareaHecha","editPriority","btnEditNewPost","el","task","filter","index","newTitle","newTitles","newPosts","statePriority","priority2","console","log","btnGoBack","btnCreateNewPost","user","limit","componentDidMount","render","createNewPost","insert","keyy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Main.css';\n//import spinner from './spinner.gif';\n\nimport Post from '../Post/Post';\nimport Form from '../Form/Form';\nimport Search from '../Search/Search'\nimport getPosts from '../../data/dataProvider';\n\n\n\n// ----------- STATE ITNITIAL\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: [],\n      user: this.props.user || \"\",\n      limit: 10,\n      // insert: true,\n      mode: 0\n    }\n  }\n  \n  addPost = (title) => { \n    this.setState({\n      posts: [...this.state.posts, { title,  check: false, priority: \"baja\"}],\n      mode: 0\n    });\n  }\n\n  async componentDidMount() {\n    const newPosts = await getPosts()\n    this.setState({ posts: [...this.state.posts, ...newPosts] });\n  }\n  \n  // ---------- CONEXIÓN CON EL COMPONENTE POST\n  drawPosts = () => {\n    if (this.state.posts.length > 0) {\n      return this.state.posts.map((item, i) =>\n\n      // const newPost = {TODO EL OBJ aquí dentro} ---> data={newPost}\n      <Post title={item.title} fnBorrar={this.deletePosts} keyy={i} fnEdit={this.editPosts} fnFlag={this.loadPosts} tareaHecha={this.tareaHecha} claseCheck={item.check} editPriority={this.editPriority} statePriority={item.priority} btnEditNewPost={this.btnEditNewPost}/>\n      )\n    }\n      return <h4>No hay datos</h4>\n    }\n      \n// ---------- FUNCIÓN ELIMINAR AL HACER CLIC EN EL BOTON de POST\n  deletePosts = (el) => { \n          const task = this.state.posts.filter((index, i )=> i !== el);\n          this.setState({posts: task})\n        \n      }\n      \n// ---------- FUNCIÓN EDITAR AL HACER CLIC EN EL BOTON de POST\n  editPosts = (i, newTitle) => {\n      const newTitles = [...this.state.posts];  // Copy of an array\n      newTitles[i].title = newTitle             // Modificar la copia con la i y el nuevo título\n      this.setState({ posts: newTitles , mode:0})       // Se sustituye el nuevo título\n    }\n\n  \n  \n  // --------- Tarea hecha, cambio de clase, tacha.\n  tareaHecha = (i) =>{   \n    const newPosts = this.state.posts.map((el, index) => {      // Se hace un map de un array y si el key(i) coincide con el index, se le cambia el estado a check (que está dentro de posts). Se returna el elemento modificado. Y se cambia el estado a este objeto newPosts\n      if(i == index){\n          el.check = !el.check\n        }\n        return el\n      }\n      )\n      this.setState({posts: newPosts})                          // Aquí se atribuye el nuevo estado de posts con newPosts\n    }\n  \n// ------ Editar la prioridad para que se pinte según prioridad media alta o baja\neditPriority = (i, statePriority) => {\n      const priority2 = this.state.posts.map((el, index) => {\n        \n        console.log(\"1\", el.priority);   // false \n        console.log(\"2\", statePriority); //  POSICIÓN DONDE SE HACE CLIC\n        console.log(\"3\", index);         //  La posición del objeto en el array\n        console.log(\"4\", i);             //  POSICIÓN DONDE SE HACE CLIC\n        \n        \n        return el.priority\n       \n        \n      })\n      this.setState({ priority: priority2})\n    }\n    \n    \n    btnGoBack = () => {\n      this.setState({mode:0})\n    }\n    btnCreateNewPost = () => {\n      this.setState({mode: 1})\n    }\n    btnEditNewPost = () => {\n      this.setState({mode: 2})\n    }\n\n\n\n  render() {\n    return (\n       (this.state.mode == 0) ?\n          <main>\n              <h1>Hola, {this.state.user ? this.state.user : \"¡qué pasa Chape!\"}</h1>\n              <div className=\"editLine\" >\n                  <div className=\"btn\" onClick={()=> this.btnCreateNewPost()} >Crear nueva</div>\n              </div>\n              {this.drawPosts()}                \n          </main> \n      : \n      (this.state.mode == 1) ?\n      <main>\n            <h1> Crea ahí una tarea como: <br /> ¡Que agsco de React!</h1>\n            <Form btnGoBack={this.btnGoBack} actualMode={this.state.mode} createNewPost={this.createNewPost} addPost={this.addPost} editPosts={this.editPosts} state={this.state.insert}/>\n      </main>\n\n    :  \n    (this.state.mode == 2) ?\n          <main>\n<             h1>Venga, échale una editadiña ahí</h1>\n                <Form btnGoBack={this.btnGoBack} actualMode={this.state.mode} editPosts={this.editPosts} texto={this.state.posts.title} keyy={this.state.posts.keyy}/> \n          </main> \n              : \" \"\n        )  \n      }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}